package java_rush.lesson7ArrayList;

//1. Создай список слов, заполни его самостоятельно.
//2. Метод fix должен:
//2.1. удалять из списка строк все слова, содержащие букву "р"
//2.2. удваивать все слова содержащие букву "л".
//2.3. если слово содержит и букву "р" и букву "л", то оставить это слово без изменений.
//2.4. с другими словами ничего не делать.

import java.util.ArrayList;

public class L9ИзменениеПоПризнакам {
    public static void main(String[] args) {
        ArrayList<String> strings = new ArrayList<String>();
        strings.add("роза");
        strings.add("лоза");
        strings.add("лира");
        strings = fix(strings);

        for (String string : strings) {
            System.out.println(string);
        }
    }

    public static ArrayList<String> fix(ArrayList<String> strings) {
        //напишите тут ваш код
        String r = "р";
        String l = "л";

        ArrayList<String> result = new ArrayList<>();
        for (String i : strings){
            boolean isR = i.contains(r);
            boolean isL = i.contains(l);

            if (isR && !isL){
                continue;
            }

            if (!isR && isL){
                result.add(i);
            }
            result.add(i);
        }

        return result;
    }
}

//Не решил
//JR
/*
String r = "р";
    String l = "л";

    ArrayList<String> result = new ArrayList<>();
        for (String string : strings) {
                boolean isR = string.contains(r);
                boolean isL = string.contains(l);

                if (isR && !isL) {
                continue;
                }

                if (!isR && isL) {
                result.add(string);
                }

                result.add(string);
                }
                return result;
                }*/
/*смотрите, в данной задаче можно применить подход "от обратного", т.е. вместо того,
        чтобы удалять ненужные слова из существующего списка, можно создать новый список,
        в который записывать только НУЖНЫЕ слова. Для этого у нас есть метод,
        который принимает наш list. В этом методе создается новый пустой список, где должны
        отсутствовать те слова, в которых есть буква "р", но нет "л",
        удваиваться слова (заноситься в новый список 2 раза), где есть буква "л", но нет "р",
        а остальные слова должны остаться без изменений, т.е. просто занесены в новый список только один раз.
        Что делает метод: он пропускает последовательно циклом for each каждое слово из того списка,
        который ему передали, через некое отборочное "сито". А логика этого сита прописана в условиях.
        У нас заданы две булевых переменных, isR и isL,  если слово из списка содержит соответствующую букву,
        то переменной присваивается значение "true". Первое проверяемое условие отбора  - если содержится "р"
        и не содержится "л", и оно истинно, то нас инструкция continue отправляет на следующую итерацию,
        т.е. проверенное слово в новый список не включается. Если же условие ложно,
        то слово проходит вторую проверку, если буквы "р" нет, а есть только "л",
        то слово заносится в список 2 раза, потому что последним оператор добавляет любое слово,
        где нет двух предыдущих условий*/
