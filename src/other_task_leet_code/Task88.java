package other_task_leet_code;
//88. Объединить отсортированный массив

import java.util.Arrays;

//Вам даны два массива целых чисел nums1и nums2, отсортированные в неубывающем порядке , и два целых числа mи n,
// представляющие количество элементов в nums1и nums2соответственно.
//
//Объединить nums1 и nums2в один массив, отсортированный в неубывающем порядке .
//
//Окончательный отсортированный массив не должен возвращаться функцией, а должен храниться внутри массиваnums1 .
// Чтобы приспособиться к этому, nums1имеет длину m + n, где первые mэлементы обозначают элементы,
// которые должны быть объединены, а последние nэлементы установлены 0и должны игнорироваться. nums2имеет длину n.
//
//
//
//Пример 1:
//
//Ввод: nums1 = [1,2,3,0,0,0], m = 3, nums2 = [2,5,6], n = 3
// Вывод: [1,2,2,3,5,6]
// Объяснение: мы объединяем массивы [1,2,3] и [2,5,6].
//Результатом слияния является [ 1 , 2 ,2, 3 ,5,6] с подчеркнутыми элементами, исходящими из nums1.
//Пример 2:
//
//Ввод: nums1 = [1], m = 1, nums2 = [], n = 0
// Вывод: [1]
// Объяснение: Мы объединяем массивы [1] и [].
//Результат слияния [1].
//Пример 3:
//
//Ввод: nums1 = [0], m = 0, nums2 = [1], n = 1
// Вывод: [1]
// Объяснение: Мы объединяем массивы [] и [1].
//Результат слияния [1].
//Обратите внимание, что поскольку m = 0, в nums1 нет элементов. 0 нужен только для того,
// чтобы результат слияния поместился в nums1.
public class Task88 {
    public static void main(String[] args) {
        int m = 3;
        int n = 3;
        int[] nums1 = new int[m + n];
        int[] nums2 = new int[n];
        for (int i = 0, j = 1; i < 3; i++, j++) {
            nums1[i] = i + 1;
            nums2[i] = j + j;
        }
        System.out.println(Arrays.toString(nums1));
        System.out.println(Arrays.toString(nums2));
        merge(nums1, m, nums2, n);
    }

    public static void merge(int[] nums1, int m, int[] nums2, int n) {
        int[] arr = new int[nums1.length];
        for (int i = 0, l = 0; i < nums2.length; i++, l++) {
            for (int j = 0; j < nums1.length - 1; j++) {
                if (nums2[i] > nums1[j] && nums2[i] < nums1[j] + 1) {
                    arr[l] = nums1[j];
                    arr[l + 1] = nums2[i];
                    l++;
                }
            }
        }
        System.out.println(Arrays.toString(arr));
    }
}
